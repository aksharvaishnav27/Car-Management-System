/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-11-09 14:04:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"login.css\">\r\n");
      out.write("    <title>Car Dealership Login</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: right;\r\n");
      out.write("	padding-right: 180px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    \r\n");
      out.write("    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	opacity: 0.8;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    /*border: #101010;\r\n");
      out.write("    border-style:outset;\r\n");
      out.write("     border: radius 40%;; */\r\n");
      out.write("	position: relative;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	background-color: #f7f7f7;\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container img {\r\n");
      out.write("    display: block;\r\n");
      out.write("}\r\n");
      out.write(".container text {\r\n");
      out.write("    /* width: 100px; */\r\n");
      out.write("    width: 440px;\r\n");
      out.write("    height: 450px;\r\n");
      out.write("    /* border: #4caf50;*/\r\n");
      out.write("/*     border-style: inherit;  */\r\n");
      out.write("	  position: absolute;\r\n");
      out.write("	  background-color: #f7f7f7;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-form {\r\n");
      out.write("/*     display: flex; */\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label,\r\n");
      out.write("input {\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-button {\r\n");
      out.write("    background-color: #4caf50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: #4caf50;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: transform 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-button:hover {\r\n");
      out.write("    transform: scale(1.1);\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("  background-image: url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTdHtqioLW3qAdaZCALAUcebNjUHLGPovCJ4A&usqp=CAU');\r\n");
      out.write("  background-size: cover;\r\n");
      out.write("  opacity: 0.9;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("		<form onsubmit=\"return validateForm()\" action=\"regform\" method=\"post\" class=\"login-form\">\r\n");
      out.write("          <div class=\"text\">\r\n");
      out.write("			<h3><font color=\"red\">Welcome to CARDX</font></h3>\r\n");
      out.write("            <label for=\"Email_id\">Email-ID:</label>\r\n");
      out.write("            <input type=\"text\" id=\"Email_id\" name=\"customer_id\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"password\">Password:</label>\r\n");
      out.write("            <input type=\"password\" id=\"password\" name=\"password\"  required><br><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"first_name\">First Name:</label>\r\n");
      out.write("            <input type=\"text\" id=\"first_name\" name=\"first_name\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"last_name\">Last Name:</label>\r\n");
      out.write("            <input type=\"text\" id=\"last_name\" name=\"last_name\" required><br><br>\r\n");
      out.write("            \r\n");
      out.write("           \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("           \r\n");
      out.write("            <label for=\"apt_name\">Apt Name:</label>\r\n");
      out.write("            <input type=\"text\" id=\"apt_name\" name=\"apt_name\" required><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <label for=\"area_name\">Area Name:</label>\r\n");
      out.write("            <input type=\"text\" id=\"area_name\" name=\"area_name\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"apt_number\">Apartment Number:</label>\r\n");
      out.write("            <input type=\"text\" id=\"apt_number\" name=\"apt_number\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"city\">City</label>\r\n");
      out.write("            <input type=\"text\" id=\"city\" name=\"city\" required><br><br>\r\n");
      out.write("             \r\n");
      out.write("            <label for=\"state\">State</label>\r\n");
      out.write("            <input type=\"text\" id=\"state\" name=\"state\" required><br><br>\r\n");
      out.write("             \r\n");
      out.write("\r\n");
      out.write("            <label for=\"pin_code\">PIN Code:</label>\r\n");
      out.write("            <input type=\"text\" id=\"pin_code\" name=\"pin_code\" required><br><br>\r\n");
      out.write("            \r\n");
      out.write("            <label for=\"Mobile_number\">Mobile no:</label>\r\n");
      out.write("            <input type=\"text\" id=\"Mobile_number\" name=\"Mobile_number\" required><br><br>\r\n");
      out.write("            \r\n");
      out.write("           \r\n");
      out.write("\r\n");
      out.write("            <input type=\"submit\" value=\"Submit\" class=\"login-button\"><br><br>	\r\n");
      out.write("			already registered?<a href=\"index.jsp\">Log in</a>\r\n");
      out.write("              </div>\r\n");
      out.write("            \r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
