/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-11-22 10:15:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.text.SimpleDateFormat;

public final class mprofile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"mechanic.css\">\r\n");
      out.write("    <title>CARDX - Mechanic Detail</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("/* mechanicdetail.css */\r\n");
      out.write("body {\r\n");
      out.write("    font-family: Arial, sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    background-color: #121111;\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-shadow: 1px 1px blueviolet;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-card {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    margin: 20px;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    background-color: rgb(17, 1, 1);\r\n");
      out.write("    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\r\n");
      out.write("    transition: box-shadow 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-card:hover {\r\n");
      out.write("    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.3);\r\n");
      out.write("    border-color: #4caf50;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-photo {\r\n");
      out.write("    margin-right: 20px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-photo img {\r\n");
      out.write("    width: 250px;\r\n");
      out.write("    height: 250px;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    border-bottom: 5px solid #535b53;\r\n");
      out.write("    transition: border 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-photo img:hover {\r\n");
      out.write("    border: 5px solid #ff5733; /* Change border color on hover */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-details table {\r\n");
      out.write("    border-bottom: 5px solid rgb(50, 62, 74);\r\n");
      out.write("    font-family: 'Times New Roman', Times, serif;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mechanic-details table td {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border-bottom: 1px solid #6a3b3b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the last row of the table */\r\n");
      out.write(".mechanic-details table tr:last-child td {\r\n");
      out.write("    /* border: none; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Styles for the service requests section */\r\n");
      out.write(".service-requests {\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bargain-reqtitle {\r\n");
      out.write("    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n");
      out.write("    background-color: #4caf50;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".request {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    color: whitesmoke;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-details {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-avatar {\r\n");
      out.write("    width: 50px;\r\n");
      out.write("    height: 50px;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write(".service-reqtitle{\r\n");
      out.write("    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n");
      out.write("    background-color: #4caf50;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("}\r\n");
      out.write(".buttons button {\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    margin-left: 10px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write(".servicedetail{\r\n");
      out.write("    color: whitesmoke;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: rgb(10, 10, 10);\r\n");
      out.write("    opacity: 75%;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("    border: inset 2px;\r\n");
      out.write("    border-radius: 50px;\r\n");
      out.write("}\r\n");
      out.write(".accept-button {\r\n");
      out.write("    background-color: #4caf50;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".reject-button {\r\n");
      out.write("    background-color: #f44336;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
 String name=(String) session.getAttribute("mname");
String email=(String) session.getAttribute("memail");
String mobile=(String)session.getAttribute("mmobile");
String area=(String) session.getAttribute("mapt_name")+" "+ (String) session.getAttribute("marea_name")+" "+(String) session.getAttribute("mcity")+" "+(String) session.getAttribute("mpin_code")+" "+(String) session.getAttribute("mstate");

      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        <h1>CARDX - Mechanic Detail</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"mechanic-card\">\r\n");
      out.write("        <div class=\"mechanic-photo\">\r\n");
      out.write("            <img src=\"https://tse4.mm.bing.net/th?id=OIP.d577O3Dn0ar6ykDyaq4myAHaFj&pid=Api&P=0&h=180\" alt=\"Mechanic Photo\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"mechanic-details\">\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>Name:</td>\r\n");
      out.write("                    <td>");
      out.print(name);
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>Mechanic ID:</td>\r\n");
      out.write("                    <td>");
      out.print(email);
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>Specialization:</td>\r\n");
      out.write("                    <td>Auto Repair</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>Address:</td>\r\n");
      out.write("                    <td>");
      out.print(area);
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>Phone Number:</td>\r\n");
      out.write("                    <td>");
      out.print(mobile);
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Service Requests section -->\r\n");
      out.write("    <section class=\"service-requests\">\r\n");
      out.write("        <div class=\"service-reqtitle\"><h1>Service Requests</h1></div>\r\n");
      out.write("        <!-- Example service request 1 -->\r\n");
      out.write("        \r\n");
      out.write("                \r\n");
      out.write("        <!-- Add more service requests as needed -->\r\n");
      out.write("        \r\n");
      out.write("        ");

        
        Class.forName("org.postgresql.Driver");

        String url = "jdbc:postgresql://localhost:5432/postgres";
        String username = "postgres";
        String password2 = "jay";
        
        Connection con = DriverManager.getConnection(url, username, password2);

       
        PreparedStatement ps = con.prepareStatement("select * from service_request where (customer_id,request_time) not in (select customer_id,request_time from service_accept)");
        //ps.setString(1, email);
        ResultSet rs=ps.executeQuery();
        
        
    	// Assuming you have a List of service requests from your database
    	//List<ServiceRequest> serviceRequests = fetchServiceRequestsFromDatabase();
	
	    // Iterate over the service requests and generate HTML dynamically
	    while (rs.next()) {
	    	
	    	ps = con.prepareStatement("select * from customer where \"Email_id\"=?");
	        ps.setString(1, rs.getString(1));
	        ResultSet rs2=ps.executeQuery();
	        rs2.next();
	        
	        ps = con.prepareStatement("select * from address where pincode=?");
            ps.setInt(1, rs2.getInt("pincode"));  // Assuming pincode is an integer
            ResultSet rs3 = ps.executeQuery();
            rs3.next();
	        
            ps=con.prepareStatement("select * from phone_no where Email_id =?");
            ps.setString(1, rs.getString(1));
            ResultSet rs4=ps.executeQuery();
            rs4.next();
            
	    	String a_name=rs2.getString("first_name");
	    	String a_area=rs3.getString("city")+" "+rs3.getString("state");
	    	String a_des=rs.getString("description_about_service");
	    	String a_mobile=rs4.getString("mobile_no");
	    	
	    	//System.out.println(System.currentTimeMillis());
	    	//System.out.println(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSS").format(new java.sql.Timestamp(System.currentTimeMillis())));
		
      out.write("\r\n");
      out.write("    	<!-- Dynamic service request -->\r\n");
      out.write("    	<div class=\"request\">\r\n");
      out.write("	        <div class=\"user-details\">\r\n");
      out.write("            	<img src=\"https://tse2.mm.bing.net/th?id=OIP.YOggOE6tFhCCNELEANDFewHaK2&pid=Api&P=0&h=180\" alt=\"User Avatar\"\r\n");
      out.write("            	class=\"user-avatar\">\r\n");
      out.write("            	<div class=\"user-info\">\r\n");
      out.write("	                <h2>");
      out.print( a_name );
      out.write("</h2>\r\n");
      out.write("                	<p>Mobile no. : ");
      out.print(a_mobile);
      out.write("</p>\r\n");
      out.write("                	<p>Location:");
      out.print( a_area );
      out.write(" </p>\r\n");
      out.write("            	</div>\r\n");
      out.write("        	</div>\r\n");
      out.write("        	<div class=\"servicedetail\">\r\n");
      out.write("	            <p>Service Description: ");
      out.print( a_des );
      out.write("</p>\r\n");
      out.write("        	</div>\r\n");
      out.write("        	<form action=\"req_accept\" method=\"post\">\r\n");
      out.write("    			<div class=\"buttons\">\r\n");
      out.write("        		");

            		java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(System.currentTimeMillis());
            		//System.out.println("Current Timestamp: " + currentTimestamp); // Debug statement
            		String formattedTimestamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSS").format(currentTimestamp);
            		//System.out.println("Formatted Timestamp: " + formattedTimestamp); // Debug statement
        		
      out.write("\r\n");
      out.write("        			<input type=\"hidden\" name=\"customer_id\" value=\"");
      out.print( rs.getString("customer_id") );
      out.write("\">\r\n");
      out.write("        			<input type=\"hidden\" name=\"req_time\" value=\"");
      out.print( rs.getString("request_time") );
      out.write("\">\r\n");
      out.write("        			<input type=\"hidden\" name=\"acc_time\" value=\"");
      out.print( formattedTimestamp );
      out.write("\">\r\n");
      out.write("        			<button class=\"accept-button\">Accept</button>\r\n");
      out.write("        			\r\n");
      out.write("    			</div>\r\n");
      out.write("			</form>\r\n");
      out.write("\r\n");
      out.write("        	\r\n");
      out.write("        	\r\n");
      out.write("    	</div>\r\n");
      out.write("	");

	    }
	
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
