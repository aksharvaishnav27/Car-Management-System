/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-11-22 09:33:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.io.*;

public final class Newcar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"newcar.css\">\r\n");
      out.write("    <title>CARDX - New Cars</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("  body {\r\n");
      out.write("    font-family: Arial, sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("}\r\n");
      out.write(".buy-button {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".buy-button:hover {\r\n");
      out.write("    background-color: #45a049;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo {\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-section {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar {\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-bar input[type=\"text\"] {\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-button {\r\n");
      out.write("    background-color: #4caf50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".filter-buttons {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-wrap: wrap;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".filter-button {\r\n");
      out.write("    background-color: #007bff;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".car-cards {\r\n");
      out.write("    display: grid;\r\n");
      out.write("    grid-template-columns: repeat(2, 1fr); \r\n");
      out.write("    gap: 20px;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    max-width: 1200px; \r\n");
      out.write("    margin: 0 auto; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card {\r\n");
      out.write("    width: 100%; \r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    background-color: #f9f9f9;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card img {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".price {\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    color: #16a219;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-details h2 {\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"logo\">CARDX</div>\r\n");
      out.write("    </header>\r\n");
      out.write("    <form action=\"newsortform\" method=\"post\" class=\"newcar-form\">\r\n");
      out.write("        <section class=\"search-section\">\r\n");
      out.write("            <div class=\"search-bar\">\r\n");
      out.write("                <input type=\"text\" placeholder=\"Search for cars...\" id=\"search\" name=\"search\">\r\n");
      out.write("                <button class=\"search-button\">&#128269; Search</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"filter-buttons\">\r\n");
      out.write("                <table>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td> <label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"1\" value=\"1\" > 1 lakh to 2 lakh</label></td>\r\n");
      out.write("                        <td> <label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"2\" value=\"2\" > 2 lakh to 5 lakh</label></td>\r\n");
      out.write("                        <td> <label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"3\" value=\"3\" > 5 lakh to 10 lakh</label></td>\r\n");
      out.write("                        <td> <label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"4\" value=\"4\"> 10 lakh to 20 lakh</label></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("    \r\n");
      out.write("                       <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                       <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                       <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                       <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                       <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                       <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td><label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"5\" value=\"5\" > 20 lakh to 30 lakh</label></td>\r\n");
      out.write("                        <td><label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"6\" value=\"6\" > 30 lakh to 50 lakh</label></td>\r\n");
      out.write("                        <td><label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"7\" value=\"7\" > 50 lakh to 80 lakh</label></td>\r\n");
      out.write("                        <td><label class=\"filter-button\"><input type=\"checkbox\" name =\"priceRange\"  id=\"8\" value=\"8\" > 80 lakh and above</label></td>\r\n");
      out.write("                      \r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("                <!-- <label class=\"filter-button\"><input type=\"checkbox\"> 1 lakh to 2 lakh</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> 2 lakh to 5 lakh</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> 5 lakh to 10 lakh</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> 10 lakh to 20 lakh</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> 20 lakh and above</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> Model 2015 - 2020</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> Model 2010 - 2015</label>\r\n");
      out.write("                <label class=\"filter-button\"><input type=\"checkbox\"> Model 2020 - 2025</label> -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("    </form>\r\n");
      out.write("    <section class=\"car-cards\">\r\n");
      out.write("        <!-- Use a loop to dynamically generate cards -->\r\n");
      out.write("        ");
 try {
            int a=259;
            Class.forName("org.postgresql.Driver");
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres", "postgres", "jay");
            PreparedStatement preparedStatement = connection.prepareStatement("SELECT * FROM new_car_model" +
                    " WHERE NOT EXISTS (SELECT 1 FROM buy_newcar WHERE new_car_model.car_id = buy_newcar.car_id)");
            ResultSet resultSet = preparedStatement.executeQuery();
            
            ResultSet  name=(ResultSet) session.getAttribute("resultset");
            if(name!=null){
            	resultSet=name;
            	session.removeAttribute("resultset");
            }

            while (resultSet.next()) {
                a++;
        
      out.write("\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <img src=\"");
      out.print( "https://source.unsplash.com/random/" +a+ "x150?"+resultSet.getString("colour")+"cars" );
      out.write("\" alt=\"car_1\">\r\n");
      out.write("                    <div class=\"card-details\">\r\n");
      out.write("                        <span class=\"price\">&#8377;");
      out.print( resultSet.getString("price") );
      out.write("</span>\r\n");
      out.write("                        <h1> ");
      out.print( resultSet.getString("company_name") );
      out.write(" </h1>\r\n");
      out.write("                        <h2>");
      out.print( resultSet.getString("model") );
      out.write("</h2>\r\n");
      out.write("                        <p>");
      out.print( resultSet.getString("fuel_type")+" "+resultSet.getString("colour") );
      out.write("</p>\r\n");
      out.write("                        \r\n");
      out.write("                    <form action=\"buyform\" method=\"post\" class=\"newcar-form\">\r\n");
      out.write("                   <input type=\"hidden\" name=\"car_id\" id=\"car_id_input\" value=\"");
      out.print( resultSet.getString("car_id") );
      out.write("\">\r\n");
      out.write("                   <input type=\"hidden\" name=\"price\" id=\"price\" value=\"");
      out.print( resultSet.getString("price") );
      out.write("\">\r\n");
      out.write("                  <button type=\"submit\" class=\"buy-button\">Buy Now</button>\r\n");
      out.write("                   </form>\r\n");
      out.write("\r\n");
      out.write("                        \r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("        ");

            }

            resultSet.close();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
      out.write("\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
