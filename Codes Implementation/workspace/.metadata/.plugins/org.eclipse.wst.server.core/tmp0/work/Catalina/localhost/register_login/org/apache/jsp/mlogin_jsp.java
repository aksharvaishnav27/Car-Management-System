/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-11-20 13:48:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class mlogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"login.css\">\r\n");
      out.write("    <title>CARDX Login</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("login css \r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    /* width: 160vw; */\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    background-image: url(https://wallpaperaccess.com/full/740013.jpg);\r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    background-color: #f7f7f7;\r\n");
      out.write("    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\r\n");
      out.write("    text-align: center; /* Center align text within the body */\r\n");
      out.write("    overflow: hidden; /* Hide horizontal overflow to prevent scrollbars */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border: 2px solid #101010;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    /* background-color: rgba(255, 255, 255, 0.8); */\r\n");
      out.write("}\r\n");
      out.write(".container h1{\r\n");
      out.write("    position: relative;\r\n");
      out.write("    text-shadow: 2px 2px 2px red;\r\n");
      out.write("    text-rendering: optimizeSpeed;\r\n");
      out.write("    animation: bounce 2s infinite;\r\n");
      out.write("}\r\n");
      out.write(".text {\r\n");
      out.write("    width: 500px;\r\n");
      out.write("    color: rgb(7, 7, 7);\r\n");
      out.write("    text-shadow:2px 1px #e20909;\r\n");
      out.write("    font-weight: 1000;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo {\r\n");
      out.write("    width: 400px;\r\n");
      out.write("    height: 200px;\r\n");
      out.write("    object-fit: contain;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    /* position: absolute; */\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("    animation: moveCar 4s ease-in-out infinite;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-form {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label,\r\n");
      out.write("input,\r\n");
      out.write("select {\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-button {\r\n");
      out.write("    background-color: green;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: red solid 2px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: transform 0.3s ease;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-button:hover {\r\n");
      out.write("    transform: scale(1.1);\r\n");
      out.write("}\r\n");
      out.write("@keyframes bounce {\r\n");
      out.write("    0% {\r\n");
      out.write("        transform: translateY(0) scale(1); /* Start position with normal size */\r\n");
      out.write("    }\r\n");
      out.write("    50% {\r\n");
      out.write("        transform: translateY(-20px) scale(1.2); /* Bounce up with increased size */\r\n");
      out.write("    }\r\n");
      out.write("    100% {\r\n");
      out.write("        transform: translateY(0) scale(1); /* Back to the original position with normal size */\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <img src=\"http://www.picshunger.com/wp-content/uploads/2015/01/WWCruisers-Car-Logo-no-background.gif\" class=\"logo\">\r\n");
      out.write("        </div>\r\n");
      out.write("           <div>\r\n");
      out.write("            <h1>C  A  R  D   X</h1>\r\n");
      out.write("           </div>\r\n");
      out.write("        <div class=\"text\">\r\n");
      out.write("\r\n");
      out.write("            <form class=\"login-form\" action=\"mloginform\" method=\"post\" id=\"loginForm\">\r\n");
      out.write("                \r\n");
      out.write("                <p>Username: <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your Username\" required></p>\r\n");
      out.write("                <p>Password: <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter Your Password\" required></p>\r\n");
      out.write("                <p> not a Mechanic yet? <a href=\"\"> register for Mechanic </a> </p>\r\n");
      out.write("                <button type=\"submit\" class=\"login-button\">Login</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"login.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
